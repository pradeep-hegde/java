/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cns.vmware.com.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CNSVolumeInfoSpec defines the desired state of CNSVolumeInfo
 */
@ApiModel(description = "CNSVolumeInfoSpec defines the desired state of CNSVolumeInfo")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-07T07:31:43.794Z[Etc/UTC]")
public class V1alpha1CNSVolumeInfoSpec {
  public static final String SERIALIZED_NAME_CAPACITY = "capacity";
  @SerializedName(SERIALIZED_NAME_CAPACITY)
  private Object capacity;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_STORAGE_CLASS_NAME = "storageClassName";
  @SerializedName(SERIALIZED_NAME_STORAGE_CLASS_NAME)
  private String storageClassName;

  public static final String SERIALIZED_NAME_STORAGE_POLICY_I_D = "storagePolicyID";
  @SerializedName(SERIALIZED_NAME_STORAGE_POLICY_I_D)
  private String storagePolicyID;

  public static final String SERIALIZED_NAME_V_CENTER_SERVER = "vCenterServer";
  @SerializedName(SERIALIZED_NAME_V_CENTER_SERVER)
  private String vCenterServer;

  public static final String SERIALIZED_NAME_VOLUME_I_D = "volumeID";
  @SerializedName(SERIALIZED_NAME_VOLUME_I_D)
  private String volumeID;


  public V1alpha1CNSVolumeInfoSpec capacity(Object capacity) {
    
    this.capacity = capacity;
    return this;
  }

   /**
   * Capacity stores the current capacity of the PersistentVolume this volume represents.
   * @return capacity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Capacity stores the current capacity of the PersistentVolume this volume represents.")

  public Object getCapacity() {
    return capacity;
  }


  public void setCapacity(Object capacity) {
    this.capacity = capacity;
  }


  public V1alpha1CNSVolumeInfoSpec namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * Namespace of the PersistentVolumeClaim.
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Namespace of the PersistentVolumeClaim.")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public V1alpha1CNSVolumeInfoSpec storageClassName(String storageClassName) {
    
    this.storageClassName = storageClassName;
    return this;
  }

   /**
   * StorageClassName is the name of the storage class associated with the volume
   * @return storageClassName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "StorageClassName is the name of the storage class associated with the volume")

  public String getStorageClassName() {
    return storageClassName;
  }


  public void setStorageClassName(String storageClassName) {
    this.storageClassName = storageClassName;
  }


  public V1alpha1CNSVolumeInfoSpec storagePolicyID(String storagePolicyID) {
    
    this.storagePolicyID = storagePolicyID;
    return this;
  }

   /**
   * StoragePolicyID is the ID of the storage policy associated with the volume
   * @return storagePolicyID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "StoragePolicyID is the ID of the storage policy associated with the volume")

  public String getStoragePolicyID() {
    return storagePolicyID;
  }


  public void setStoragePolicyID(String storagePolicyID) {
    this.storagePolicyID = storagePolicyID;
  }


  public V1alpha1CNSVolumeInfoSpec vCenterServer(String vCenterServer) {
    
    this.vCenterServer = vCenterServer;
    return this;
  }

   /**
   * vCenterServer is the IP/FQDN of the vCenter host on which the CNS volume is accessible.
   * @return vCenterServer
  **/
  @ApiModelProperty(required = true, value = "vCenterServer is the IP/FQDN of the vCenter host on which the CNS volume is accessible.")

  public String getvCenterServer() {
    return vCenterServer;
  }


  public void setvCenterServer(String vCenterServer) {
    this.vCenterServer = vCenterServer;
  }


  public V1alpha1CNSVolumeInfoSpec volumeID(String volumeID) {
    
    this.volumeID = volumeID;
    return this;
  }

   /**
   * VolumeID is the FCD ID obtained from creating volume using CNS API.
   * @return volumeID
  **/
  @ApiModelProperty(required = true, value = "VolumeID is the FCD ID obtained from creating volume using CNS API.")

  public String getVolumeID() {
    return volumeID;
  }


  public void setVolumeID(String volumeID) {
    this.volumeID = volumeID;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1CNSVolumeInfoSpec v1alpha1CNSVolumeInfoSpec = (V1alpha1CNSVolumeInfoSpec) o;
    return Objects.equals(this.capacity, v1alpha1CNSVolumeInfoSpec.capacity) &&
        Objects.equals(this.namespace, v1alpha1CNSVolumeInfoSpec.namespace) &&
        Objects.equals(this.storageClassName, v1alpha1CNSVolumeInfoSpec.storageClassName) &&
        Objects.equals(this.storagePolicyID, v1alpha1CNSVolumeInfoSpec.storagePolicyID) &&
        Objects.equals(this.vCenterServer, v1alpha1CNSVolumeInfoSpec.vCenterServer) &&
        Objects.equals(this.volumeID, v1alpha1CNSVolumeInfoSpec.volumeID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capacity, namespace, storageClassName, storagePolicyID, vCenterServer, volumeID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1CNSVolumeInfoSpec {\n");
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    storageClassName: ").append(toIndentedString(storageClassName)).append("\n");
    sb.append("    storagePolicyID: ").append(toIndentedString(storagePolicyID)).append("\n");
    sb.append("    vCenterServer: ").append(toIndentedString(vCenterServer)).append("\n");
    sb.append("    volumeID: ").append(toIndentedString(volumeID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

